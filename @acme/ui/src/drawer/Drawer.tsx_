import { Fragment, ReactNode, useState } from "react"
import { Dialog, Transition } from "@headlessui/react"
import { Button } from "antd"

import { useResponsive } from "@acme/hooks"
import { CloseOutlined } from @acme/ui/icons

type DrawerProps = {
  open: boolean
  title?: ReactNode
  children: ReactNode
  onClose: () => void
}
const Drawer = ({ open, title, children, onClose }: DrawerProps) => {
  return (
    <Transition.Root show={open} as={Fragment}>
      <Dialog as="div" className="relative z-10" onClose={onClose}>
        <Transition.Child
          as={Fragment}
          enter="ease-in-out duration-500"
          enterFrom="opacity-0"
          enterTo="opacity-100"
          leave="ease-in-out duration-500"
          leaveFrom="opacity-100"
          leaveTo="opacity-0"
        >
          <div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
        </Transition.Child>

        <div className="fixed inset-0 overflow-hidden">
          <div className="absolute inset-0 overflow-hidden">
            <div className="pointer-events-none fixed inset-y-0 right-0 flex max-w-full pl-10">
              <Transition.Child
                as={Fragment}
                enter="transform transition ease-in-out duration-500 sm:duration-700"
                enterFrom="translate-x-full"
                enterTo="translate-x-0"
                leave="transform transition ease-in-out duration-500 sm:duration-700"
                leaveFrom="translate-x-0"
                leaveTo="translate-x-full"
              >
                <Dialog.Panel className="pointer-events-auto relative w-screen max-w-md">
                  {/* <Transition.Child */}
                  {/*   as={Fragment} */}
                  {/*   enter="ease-in-out duration-500" */}
                  {/*   enterFrom="opacity-0" */}
                  {/*   enterTo="opacity-100" */}
                  {/*   leave="ease-in-out duration-500" */}
                  {/*   leaveFrom="opacity-100" */}
                  {/*   leaveTo="opacity-0" */}
                  {/* > */}
                  {/*   <div className="absolute left-0 top-0 -ml-8 flex pr-2 pt-4 sm:-ml-10 sm:pr-4"> */}
                  {/*     <button */}
                  {/*       type="button" */}
                  {/*       className="relative rounded-md text-gray-300 hover:text-white focus:outline-none focus:ring-2 focus:ring-white" */}
                  {/*       onClick={onClose} */}
                  {/*     > */}
                  {/*       <span className="absolute -inset-2.5" /> */}
                  {/*       <span className="sr-only">Close panel</span> */}
                  {/*       <CloseOutlined /> */}
                  {/*     </button> */}
                  {/*   </div> */}
                  {/* </Transition.Child> */}
                  <div className="flex h-full flex-col overflow-y-scroll bg-white shadow-xl">
                    <div className="flex-1 overflow-y-auto px-4 py-6 sm:px-6">
                      <div className="flex items-start justify-between">
                        <Dialog.Title className="text-color text-lg font-semibold">
                          {title}
                        </Dialog.Title>
                        <div className="ml-3 flex h-7 items-center">
                          <button
                            type="button"
                            className="relative -m-2 p-2 text-gray-400 hover:text-gray-500"
                            onClick={onClose}
                          >
                            <span className="absolute -inset-0.5" />
                            <span className="sr-only">Close panel</span>
                            <CloseOutlined />
                          </button>
                        </div>
                      </div>
                    </div>
                    <div className="mt-8">
                      <div className="flow-root">{children}</div>
                    </div>
                    {/* <div className="px-4 sm:px-6"> */}
                    {/*   <Dialog.Title className="text-base font-semibold leading-6 text-gray-900"> */}
                    {/*     Panel title */}
                    {/*   </Dialog.Title> */}
                    {/* </div> */}
                    {/* <div className="relative mt-6 flex-1 px-4 sm:px-6"> */}
                    {/*  Your content */}
                    {/* </div> */}
                  </div>
                </Dialog.Panel>
              </Transition.Child>
            </div>
          </div>
        </div>
      </Dialog>
    </Transition.Root>
  )
}

export default Drawer
